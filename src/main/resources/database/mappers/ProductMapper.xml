<?xml version="1.0" encoding="UTF-8"?>

<!-- 어떤 태그가 어떤 역할을 한다 : 스키마코드 필요함 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
		
<mapper namespace="com.semi.main.product.ProductDAO">

<select id="getConditionList" resultMap="getSelectResult" parameterType="Pager">
SELECT * FROM ( SELECT ROWNUM R, B.* FROM ( SELECT P.*, M.USERID, PI.FILENO, PI.ORIGINALNAME, PI.FILENAME FROM PRODUCT P INNER JOIN MEMBER M ON P.USERNO = M.USERNO LEFT JOIN PRODUCTIMAGE PI ON P.PRONO = PI.PRONO WHERE P.PRONO > 0
<choose>
<when test="condition == '최신순'">ORDER BY P.CREATEDATE DESC</when>
<when test="condition == '인기순'">ORDER BY P.PROHIT DESC</when>
<when test="condition == '저가순'">ORDER BY P.PROPRICE ASC</when>
<when test="condition == '고가순'">ORDER BY P.PROPRICE DESC</when>
</choose>
) B ) WHERE R BETWEEN #{startRow} AND #{lastRow}
</select>
<select id="getTotal" parameterType="Pager" resultType="Long">
SELECT COUNT(PRONO) FROM PRODUCT P INNER JOIN MEMBER M ON P.USERNO = M.USERNO WHERE P.PRONO > 0
<choose>
<when test="kind=='proName'">AND P.PRONAME LIKE '%'||#{search}||'%'</when>
<when test="kind=='procontents'">AND P.PROCONTENTS LIKE '%'||#{search}||'%'</when>
<otherwise>AND M.USERID LIKE '%'||#{search}||'%'</otherwise>
</choose>
</select>
<!--  상품 카테고리별 리스트 가져오는 쿼리  -->
<!-- 상품 카테고리별 리스트 가져오는 쿼리 -->
<select id="getCategoryList" resultMap="getSelectResult" parameterType="Pager">
    SELECT *
    FROM (
        SELECT ROWNUM R, B.*
        FROM (
            SELECT P.*, M.USERID, PI.FILENO, PI.ORIGINALNAME, PI.FILENAME
            FROM PRODUCT P
            INNER JOIN MEMBER M ON P.USERNO = M.USERNO
            LEFT JOIN PRODUCTIMAGE PI ON P.PRONO = PI.PRONO
            WHERE P.PRONO > 0 AND P.CATNO = #{catNo}
            <choose>
                <when test="kind=='proName'">AND P.PRONAME LIKE '%'||#{search}||'%'</when>
                <when test="kind=='proContents'">AND P.PROCONTENTS LIKE '%'||#{search}||'%'</when>
                <otherwise>AND M.USERID LIKE '%'||#{search}||'%'</otherwise>
            </choose>
            <choose>
                <when test="condition == '최신순'">ORDER BY P.CREATEDATE DESC</when>
                <when test="condition == '인기순'">ORDER BY P.PROHIT DESC</when>
                <when test="condition == '저가순'">ORDER BY P.PROPRICE ASC</when>
                <when test="condition == '고가순'">ORDER BY P.PROPRICE DESC</when>
                <otherwise>ORDER BY P.CREATEDATE DESC</otherwise> <!-- 기본 정렬 조건 -->
            </choose>
        ) B
    ) WHERE R BETWEEN #{startRow} AND #{lastRow}
</select>


<!-- 상품 리스트 가져오는 쿼리 -->
<select id="getList" resultMap="getSelectResult" parameterType="Pager">
    SELECT *
    FROM (
        SELECT ROWNUM R, B.*
        FROM (
            SELECT P.*, M.USERID, PI.FILENO, PI.ORIGINALNAME, PI.FILENAME
            FROM PRODUCT P
            INNER JOIN MEMBER M ON P.USERNO = M.USERNO
            LEFT JOIN PRODUCTIMAGE PI ON P.PRONO = PI.PRONO
            WHERE P.PRONO > 0
            <choose>
                <when test="kind=='proName'">AND P.PRONAME LIKE '%'||#{search}||'%'</when>
                <when test="kind=='proContents'">AND P.PROCONTENTS LIKE '%'||#{search}||'%'</when>
                <otherwise>AND M.USERID LIKE '%'||#{search}||'%'</otherwise>
            </choose>
            <choose>
                <when test="condition == '최신순'">ORDER BY P.CREATEDATE DESC</when>
                <when test="condition == '인기순'">ORDER BY P.PROHIT DESC</when>
                <when test="condition == '저가순'">ORDER BY P.PROPRICE ASC</when>
                <when test="condition == '고가순'">ORDER BY P.PROPRICE DESC</when>
                <otherwise>ORDER BY P.CREATEDATE DESC</otherwise> <!-- 기본 정렬 조건 -->
            </choose>
        ) B
    ) WHERE R BETWEEN #{startRow} AND #{lastRow}
</select>

<resultMap type="ProductDTO" id="getSelectResult">
<id column="PRONO" property="proNo"/>
<result column="PRONAME" property="proName"/>
<result column="USERNO" property="userNo"/>
<result column="CATNO" property="catNo"/>
<result column="PROPRICE" property="proPrice"/>
<result column="PROCONTENTS" property="proContents"/>
<result column="CREATEDATE" property="createDate"/>
<result column="PROHIT" property="hit"/>
<result column="PROSALE" property="proSale"/>
<result column="USERID" property="userId"/>
<!--
  <association property="category" javaType="CategoryDTO">
	        <id column="CATNO" property="catNo"/>
	        <result column="CATNAME" property="catName"/>
	    </association> 
-->
<collection property="fileDTOs" javaType="List" ofType="ProductFileDTO">
<id column="FILENO" property="fileNo"/>
<result column="ORIGINALNAME" property="originalName"/>
<result column="FILENAME" property="fileName"/>
</collection>
</resultMap>
<resultMap id="productFileResultMap" type="ProductFileDTO">
<id property="fileNo" column="FILENO"/>
<result property="originalName" column="ORIGINALNAME"/>
<result property="fileName" column="FILENAME"/>
</resultMap>
<select id="getFileList" resultMap="productFileResultMap" parameterType="Long">
SELECT FILENO, ORIGINALNAME, FILENAME FROM PRODUCTIMAGE WHERE PRONO = #{proNo}
</select>
<update id="setHitCount">
UPDATE PRODUCT SET PROHIT = PROHIT + 1 WHERE PRONO = #{proNo}
</update>
<select id="countProduct" parameterType="ProductDTO" resultType="Long">
SELECT COUNT(PRONO) FROM PRODUCT WHERE USERNO=#{userNo}
</select>
<select id="countReview" parameterType="ProductDTO" resultType="Long">
SELECT COUNT(REVIEWNO) FROM REVIEW WHERE PRONO IN (SELECT PRONO FROM PRODUCT WHERE USERNO=#{userNo})
</select>
<select id="memberProList" parameterType="ProductDTO" resultMap="getSelectResult">
<![CDATA[
SELECT A.*, PI.FILENO, PI.ORIGINALNAME, PI.FILENAME FROM (SELECT * FROM PRODUCT WHERE USERNO=#{userNo} AND ROWNUM < 6 )A LEFT JOIN PRODUCTIMAGE PI ON (A.PRONO=PI.PRONO) ORDER BY CREATEDATE DESC
]]>
</select>
<select id="memberReviewList" parameterType="ProductDTO" resultType="ProductReviewDTO">
<![CDATA[
SELECT C.* FROM (SELECT R.*, M.USERID FROM REVIEW R JOIN MEMBER M ON(R.USERNO=M.USERNO) WHERE PRONO IN (SELECT PRONO FROM PRODUCT WHERE USERNO=#{userNo}) ORDER BY REVIEWDATE DESC)C WHERE ROWNUM < 6
]]>
</select>
<insert id="setAdd" parameterType="ProductDTO">
<selectKey keyProperty="proNo" order="BEFORE" resultType="Long">SELECT PRODUCT_SEQ.NEXTVAL FROM DUAL</selectKey>
INSERT INTO PRODUCT (PRONO,CATNO,USERNO,PRONAME,PROPRICE,PROCONTENTS, PROAMOUNT,CREATEDATE,MODIFYDATE,EXCHANGE,PROSTATUS,PROHIT,PROSALE) VALUES (#{proNo}, #{catNo}, (SELECT USERNO FROM MEMBER WHERE USERID = #{userId}), #{proName}, #{proPrice}, #{proContents}, #{proAmount}, sysdate, sysdate, #{exchange}, #{proStatus}, 0, #{proSale})
</insert>
<insert id="setFileAdd" parameterType="ProductFileDTO">
INSERT INTO PRODUCTIMAGE VALUES (PRODUCTIMAGE_SEQ.NEXTVAL,#{proNo}, #{fileName}, #{originalName} )
</insert>
<select id="getDetail" parameterType="ProductDTO" resultMap="getSelectResult">
SELECT P.*, PR.*, C.CATNAME, M.USERID FROM PRODUCT P LEFT JOIN PRODUCTIMAGE PR ON (P.PRONO=PR.PRONO) JOIN CATEGORY C ON (P.CATNO = C.CATNO) JOIN MEMBER M ON (P.USERNO = M.USERNO) WHERE P.PRONO= #{proNo}
</select>
<insert id="dibsAdd" parameterType="ProductDTO">
INSERT INTO DIBS VALUES (#{proNo}, #{userNo}, SYSDATE)
</insert>
<delete id="dibsDelete" parameterType="ProductDTO">
DELETE DIBS WHERE PRONO=#{proNo} AND USERNO=#{userNo}
</delete>
<select id="dibsConfirm" parameterType="ProductDTO" resultType="ProductDTO">
SELECT * FROM DIBS WHERE PRONO=#{proNo} AND USERNO=#{userNo}
</select>
<select id="dibsNum" parameterType="ProductDTO" resultType="Long">
SELECT COUNT(PRONO) FROM DIBS WHERE PRONO=#{proNo}
</select>
<select id="imageCount" parameterType="ProductDTO" resultType="Long">
SELECT COUNT(FILENO) FROM PRODUCTIMAGE WHERE PRONO=#{proNo}
</select>
<insert id="a"/>
<update id="b"/>
<delete id="c"/>
</mapper>