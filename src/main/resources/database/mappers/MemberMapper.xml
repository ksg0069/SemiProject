<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.semi.main.member.MemberDAO">

<!-- login -->
	<select id="getLogin" resultMap="getLoginResult" parameterType="MemberDTO">
	SELECT M.*, R.*, P.*
	FROM MEMBER M 
	LEFT OUTER JOIN PROFILE P
	ON (M.USERNO = P.USERNO)
	LEFT OUTER JOIN MEMBERROLE MR
	ON (M.USERNO = MR.USERNO)
	LEFT OUTER JOIN ROLE R
	ON (R.GRANTNO = MR.GRANTNO)
	WHERE M.USERID = #{userId} AND USERPW=#{userPw}
	ORDER BY P.FILENO ASC
	</select>
	
<!-- JOIN Mapping -->	
	<resultMap type="MemberDTO" id="getLoginResult">
		<id column="USERNO" property="userNo" ></id>
		<result column="USERID" property="userId"/>
		<result column="USERPW" property="userPw"/>
		<result column="NAME" property="name"/>
		<result column="EMAIL" property="email"/>
		<result column="BIRTH" property="birth"/>
		<result column="ADDRESS" property="address"/>
		<result column="PHONE" property="phone"/>
		<result column="ACCOUNTDATE" property="accountDate"/>
		<result column="INTRO" property="intro"/>
		<result column="STATUSNO" property="statusNo"/>
		<result column="ZIPCODE" property="zipCode"/>
		<result column="REFADDRESS" property="refAddress"/>
		<result column="DETAILADDRESS" property="detailAddress"/>
		<result column="HOLDER" property="holder"/>
		<result column="BANKCODE" property="bankCode"/>
		<result column="BANKNUM" property="bankNum"/>
		
		<association property="memberFileDTO" javaType="MemberFileDTO">
			<id column="FILENO" property="fileNo"/>
			<result column="FILENAME" property="fileName"/>
			<result column="ORIGINALNAME" property="originalName"/>
		</association>
		
		<collection property="roles" javaType="List" ofType="RoleDTO">
			<id column="GRANTNO" property="grantNo"/>
			<result column="GRANTNAME" property="grantName"/>		
		</collection>

	</resultMap>

	<!-- 회원가입 -->
 	<insert id="setJoin"  parameterType="MemberDTO">
 		<selectKey keyProperty="userNo" resultType="Long" order="BEFORE">
 			SELECT MEMBER_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO MEMBER (USERNO,USERID,USERPW,NAME,EMAIL,BIRTH,ADDRESS,PHONE,ACCOUNTDATE
 		,INTRO,STATUSNO,ZIPCODE,REFADDRESS,DETAILADDRESS)
 		VALUES(#{userNo},#{userId},#{userPw},#{name},#{email}
 		,#{birth},#{address},#{phone},SYSDATE,#{intro},1,#{zipCode}, #{refAddress}, #{detailAddress})
 	</insert>
 	
 	<!-- 권한설정 -->
 	<insert id="joinGrant" parameterType="MemberDTO">
 		INSERT INTO MEMBERROLE VALUES (#{userNo},1)
 	</insert>
 	
 	<!-- ID 중복체크 -->
 	<select id="getUserIdCheck" parameterType="MemberDTO" resultType="MemberDTO">
 		SELECT USERID FROM MEMBER WHERE USERID = #{userId}
 	</select>	
 	
 	<!-- Email 중복체크 -->
 	<select id="getMailCheck" parameterType="MemberDTO" resultType="MemberDTO">
 		SELECT EMAIL FROM MEMBER WHERE EMAIL = #{email}
 	</select>
 	<!-- Email 중복체크 -->
 	<select id="getEmailCheck" parameterType="MemberDTO" resultType="MemberDTO">
 		SELECT * FROM MEMBER WHERE EMAIL = #{email}
 	</select>
	
	<!-- 회원 정보 조회 -->
	<select id="getMemberDetail" parameterType="MemberDTO" resultType="MemberDTO">
 		SELECT * FROM MEMBER WHERE USERID = #{userId}
 	</select>
 	
 	<!-- PW 변경 -->
 	<update id="setUpdatePw" parameterType="MemberDTO">
		UPDATE MEMBER SET USERPW = #{userPw} WHERE USERID = #{userId}
	</update>
	
	<!-- ID 찾기 -->
	<select id="getFindId" parameterType="MemberDTO" resultType="String">
 		SELECT USERID FROM MEMBER WHERE EMAIL = #{email}
 	</select>
	
	
</mapper>